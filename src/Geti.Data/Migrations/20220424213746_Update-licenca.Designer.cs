// <auto-generated />
using System;
using Geti.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geti.Data.Migrations
{
    [DbContext(typeof(GetiDbContext))]
    [Migration("20220424213746_Update-licenca")]
    partial class Updatelicenca
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Geti.Business.Models.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Geti.Business.Models.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataComentario")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("EquipamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Geti.Business.Models.Equipamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Armazenamento")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAquisicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("IP")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Memoria")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modelo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NotaFiscal")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Patrimonio")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Processador")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusEquipamento")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("TipoEquipamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Geti.Business.Models.EquipamentoLicenca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EquipamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicencaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("LicencaId");

                    b.ToTable("EquipamentoLicenca");
                });

            modelBuilder.Entity("Geti.Business.Models.Licenca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("Disponivel")
                        .HasColumnType("int");

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid>("SoftwareId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareId");

                    b.ToTable("Licencas");
                });

            modelBuilder.Entity("Geti.Business.Models.Software", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("Geti.Business.Models.Comentario", b =>
                {
                    b.HasOne("Geti.Business.Models.Equipamento", "Equipamento")
                        .WithMany("Comentarios")
                        .HasForeignKey("EquipamentoId")
                        .IsRequired();

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("Geti.Business.Models.Equipamento", b =>
                {
                    b.HasOne("Geti.Business.Models.Colaborador", "Colaborador")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ColaboradorId")
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("Geti.Business.Models.EquipamentoLicenca", b =>
                {
                    b.HasOne("Geti.Business.Models.Equipamento", "Equipamento")
                        .WithMany("Licencas")
                        .HasForeignKey("EquipamentoId")
                        .IsRequired();

                    b.HasOne("Geti.Business.Models.Licenca", "Licenca")
                        .WithMany("Equipamentos")
                        .HasForeignKey("LicencaId")
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Licenca");
                });

            modelBuilder.Entity("Geti.Business.Models.Licenca", b =>
                {
                    b.HasOne("Geti.Business.Models.Software", "Software")
                        .WithMany("Licencas")
                        .HasForeignKey("SoftwareId")
                        .IsRequired();

                    b.Navigation("Software");
                });

            modelBuilder.Entity("Geti.Business.Models.Colaborador", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("Geti.Business.Models.Equipamento", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Licencas");
                });

            modelBuilder.Entity("Geti.Business.Models.Licenca", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("Geti.Business.Models.Software", b =>
                {
                    b.Navigation("Licencas");
                });
#pragma warning restore 612, 618
        }
    }
}
